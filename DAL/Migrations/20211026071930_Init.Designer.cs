// <auto-generated />
using System;
using DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20211026071930_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DAL.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Aliases")
                        .HasColumnName("aliases")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Codename")
                        .HasColumnName("codename")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<bool>("Is_base_expense")
                        .HasColumnName("is_base_expense")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Is_base_income")
                        .HasColumnName("is_base_income")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Is_income")
                        .HasColumnName("is_income")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("DAL.Entity.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnName("category_codename")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Raw_text")
                        .HasColumnName("raw_text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("expense");
                });

            modelBuilder.Entity("DAL.Entity.Expense", b =>
                {
                    b.HasOne("DAL.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
